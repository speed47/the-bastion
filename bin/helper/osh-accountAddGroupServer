#! /usr/bin/perl -T
# vim: set filetype=perl ts=4 sw=4 sts=4 et:
# KEYSUDOERS # as a gatekeeper, to be able to add the servers to /home/allowkeeper/ACCOUNT/allowed.partial.%GROUP% file
# KEYSUDOERS SUPEROWNERS, %%GROUP%-gatekeeper ALL=(allowkeeper) NOPASSWD: /usr/bin/env perl -T %BASEPATH%/bin/helper/osh-accountAddGroupServer --group %GROUP% *
# FILEMODE 0750
# FILEOWN 0 allowkeeper

#>HEADER
use common::sense;
use Getopt::Long qw(:config no_auto_abbrev no_ignore_case);

use File::Basename;
use lib dirname(__FILE__) . '/../../lib/perl';
use OVH::Bastion;
use OVH::Bastion::Helper;

# Fetch command options
my $fnret;
my ($result, @optwarns, %p);
eval {
    local $SIG{__WARN__} = sub { push @optwarns, shift };
    $result = GetOptions(
        "account=s"   => sub { $p{'account'}  //= $_[1] },
        "group=s"     => sub { $p{'group'}    //= $_[1] },
        "ip=s"        => sub { $p{'ip'}       //= $_[1] },
        "user=s"      => sub { $p{'user'}     //= $_[1] },
        "port=i"      => sub { $p{'port'}     //= $_[1] },
        "action=s"    => sub { $p{'action'}   //= $_[1] },
        "ttl=i"       => sub { $p{'ttl'}      //= $_[1] },
        "comment=s"   => sub { $p{'comment'}  //= $_[1] },
        "force-key=s" => sub { $p{'forceKey'} //= $_[1] },
    );
};
if ($@) { die $@ }

if (!$result) {
    local $" = ", ";
    HEXIT('ERR_BAD_OPTIONS', msg => "Error parsing options: @optwarns");
}

OVH::Bastion::Helper::check_spurious_args();

if (!$p{'action'} || !$p{'ip'} || !$p{'account'} || !$p{'group'}) {
    HEXIT('ERR_MISSING_PARAMETER', msg => "Missing argument 'action' or 'ip' or 'account' or 'group'");
}
#<HEADER

#>PARAMS:ACTION
if (!grep { $p{'action'} eq $_ } qw{ add del }) {
    return R('ERR_INVALID_PARAMETER', msg => "expected 'add' or 'del' as an action");
}
#<PARAMS:ACTION
my $Account = OVH::Bastion::Account->newFromName($p{'account'}, check => 1);
$Account or HEXIT($Account);

my $Group = OVH::Bastion::Group->newFromName($p{'group'}, check => 1);
$Group or HEXIT($Group);

#>CODE
# access_modify validates all its parameters, don't do it ourselves here for clarity
$fnret = $Account->accessModify(
    way      => 'groupguest',
    Group    => $Group,
    action   => $p{'action'},
    user     => $p{'user'},
    ip       => $p{'ip'},
    port     => $p{'port'},
    ttl      => $p{'ttl'},
    comment  => $p{'comment'},
    forceKey => $p{'forceKey'},
);
HEXIT($fnret);
